{"version":3,"sources":["components/Profile/Profile.module.css","components/Statistics/Statistics.module.css","components/FriendsListItem/FriendListItem.module.css","components/FriendList/FriendList.module.css","components/TransactionHistory/TransactionHistory.module.css","components/Statistics/Statistics.js","components/Profile/Profile.js","components/FriendsListItem/FriendsListItem.js","components/FriendList/FriendList.js","components/TransactionHistoryItem/TransactionHistoryItem.js","components/TransactionHistory/TransactionHistory.js","components/App.js","index.js"],"names":["module","exports","Statistics","data","title","className","styles","statistics","length","map","item","key","id","label","percentage","Profile","user","avatar","tag","location","name","stats","followers","views","likes","profile","src","alt","defaultProps","FriendListItem","isOnline","online","offline","width","FriendList","friends","friend","TransactionHistoryItem","type","amount","currency","TransactionHistory","transactions","transaction","App","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.1a7ad1c4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__2HCLW\",\"avatar\":\"Profile_avatar__13dfU\",\"stats\":\"Profile_stats__32S3q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__3ntcU\",\"stat-list\":\"Statistics_stat-list__16rEX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"online\":\"FriendListItem_online__2vZHH\",\"offline\":\"FriendListItem_offline__3WNQT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friend-list\":\"FriendList_friend-list__2OL4J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transaction-history\":\"TransactionHistory_transaction-history__38qKg\"};","import React from 'react';\nimport T from 'prop-types';\nimport styles from './Statistics.module.css';\n\nconst Statistics = ({ data, title }) => {\n  return (\n    <section className={styles.statistics}>\n      {title && <h2 className=\"title\">{title}</h2>}\n\n      <ul className={styles['stat-list']}>\n        {data.length > 0 &&\n          data.map(item => (\n            <li className=\"item\" key={item.id}>\n              <span className=\"label\">{item.label}</span>\n              <span className=\"percentage\">{item.percentage}%</span>\n            </li>\n          ))}\n      </ul>\n    </section>\n  );\n};\n\nStatistics.propTypes = {\n  data: T.arrayOf(\n    T.shape({\n      id: T.string.isRequired,\n      label: T.string.isRequired,\n      percentage: T.number.isRequired,\n    }),\n  ).isRequired,\n  title: T.string,\n};\n\nexport default Statistics;\n","import React from 'react';\nimport T from 'prop-types';\nimport styles from './Profile.module.css';\n\nconst Profile = ({ user }) => {\n  const {\n    avatar,\n    tag,\n    location,\n    name,\n    stats: { followers, views, likes },\n  } = user;\n\n  return (\n    <div className={styles.profile}>\n      <div className=\"description\">\n        <img src={avatar} alt=\"user avatar\" className={styles.avatar} />\n        <p className=\"name\">{name}</p>\n        <p className=\"tag\">@{tag}</p>\n        <p className=\"location\">{location}</p>\n      </div>\n\n      <ul className={styles.stats}>\n        <li>\n          <span className=\"label\">Followers</span>\n          <span className=\"quantity\">{followers}</span>\n        </li>\n        <li>\n          <span className=\"label\">Views</span>\n          <span className=\"quantity\">{views}</span>\n        </li>\n        <li>\n          <span className=\"label\">Likes</span>\n          <span className=\"quantity\">{likes}</span>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nProfile.defaultProps = {};\n\nProfile.propTypes = {\n  user: T.shape({\n    name: T.string.isRequired,\n    tag: T.string.isRequired,\n    location: T.string.isRequired,\n    avatar: T.string.isRequired,\n    stats: T.shape({\n      followers: T.number.isRequired,\n      views: T.number.isRequired,\n      likes: T.number.isRequired,\n    }).isRequired,\n  }).isRequired,\n};\n\nexport default Profile;\n","import React from 'react';\nimport T from 'prop-types';\nimport styles from './FriendListItem.module.css';\n\nconst FriendListItem = ({ avatar, name, isOnline }) => {\n  return (\n    <li className=\"item\">\n      <span className={`status ${isOnline ? styles.online : styles.offline}`} />\n      <img className=\"avatar\" src={avatar} alt=\"\" width=\"48\" />\n      <p className=\"name\">{name}</p>\n    </li>\n  );\n};\n\nFriendListItem.propTypes = {\n  avatar: T.string.isRequired,\n  name: T.string.isRequired,\n  isOnline: T.bool.isRequired,\n};\n\nexport default FriendListItem;\n","import React from 'react';\nimport T from 'prop-types';\nimport FriendListItem from '../FriendsListItem/FriendsListItem';\nimport styles from './FriendList.module.css';\n\nconst FriendList = ({ friends }) => {\n  return (\n    <ul className={styles['friend-list']}>\n      {friends.map(friend => (\n        <FriendListItem\n          key={friend.id}\n          avatar={friend.avatar}\n          name={friend.name}\n          isOnline={friend.isOnline}\n        />\n      ))}\n    </ul>\n  );\n};\n\nFriendList.propTypes = {\n  friends: T.arrayOf(\n    T.shape({\n      id: T.number.isRequired,\n      avatar: T.string.isRequired,\n      name: T.string.isRequired,\n      isOnline: T.bool.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n\nexport default FriendList;\n","import React from 'react';\nimport T from 'prop-types';\n\nconst TransactionHistoryItem = ({ type, amount, currency }) => {\n  return (\n    <tr>\n      <td>{type}</td>\n      <td>{amount}</td>\n      <td>{currency}</td>\n    </tr>\n  );\n};\n\nTransactionHistoryItem.propTypes = {\n  type: T.string.isRequired,\n  amount: T.string.isRequired,\n  currency: T.string.isRequired,\n};\n\nexport default TransactionHistoryItem;\n","import React from 'react';\nimport T from 'prop-types';\nimport TransactionHistoryItem from '../TransactionHistoryItem/TransactionHistoryItem';\nimport styles from './TransactionHistory.module.css';\n\nconst TransactionHistory = ({ transactions }) => {\n  return (\n    <table className={styles['transaction-history']}>\n      <thead>\n        <tr>\n          <th>Type</th>\n          <th>Amount</th>\n          <th>Currency</th>\n        </tr>\n      </thead>\n      <tbody>\n        {transactions.map(transaction => (\n          <TransactionHistoryItem\n            key={transaction.id}\n            type={transaction.type}\n            amount={transaction.amount}\n            currency={transaction.currency}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nTransactionHistory.propTypes = {\n  transactions: T.arrayOf(\n    T.shape({\n      id: T.string.isRequired,\n      type: T.string.isRequired,\n      amount: T.string.isRequired,\n      currency: T.string.isRequired,\n    }),\n  ).isRequired,\n};\n\nexport default TransactionHistory;\n","import React from 'react';\nimport Statistics from './Statistics/Statistics';\nimport Profile from './Profile/Profile';\nimport FriendList from './FriendList/FriendList';\nimport TransactionHistory from './TransactionHistory/TransactionHistory';\nimport friends from '../data/friends';\nimport user from '../data/user';\nimport statistics from '../data/statistical-data';\nimport transactions from '../data/transactions';\n\nconst App = () => (\n  <>\n    <Profile user={user} />\n    <Statistics data={statistics} title=\"File upload\" />\n    <FriendList friends={friends} />\n    <TransactionHistory transactions={transactions} />\n  </>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}